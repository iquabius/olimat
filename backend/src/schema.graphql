# import Test from "./generated/prisma.graphql"
# import School from "./generated/prisma.graphql"
# import City from "./generated/prisma.graphql"
# import Olympiad, OlympiadEdge, PageInfo from "./generated/prisma.graphql"

type Query {
  olympiad: Olympiad!
  olympiads: [Olympiad!]!
  olympiadsFeed(first: Int, after: String): OlympiadFeed!
  schools: [School!]!
  school(id: ID!): School!
  tests: [Test!]!
  test(id: ID!): Test!
  me: User
}

type Mutation {
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createTest(title: String!, description: String!): Test!
  deleteTest(id: ID!): Test!
  createSchool(
    name: String!
    email: String!
    phone: String
    pedagogyCoord: String
    director: String
    city: String!
    address: String
  ): School!
  deleteSchool(id: ID!): School!
}

type AuthPayload {
  token: String!
  user: User!
}

"""
A connection to a list of items.
"""
type OlympiadFeed {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [OlympiadEdge]!
}

type User {
  id: ID!
  email: String!
  name: String!
  tests: [Test!]!
}
