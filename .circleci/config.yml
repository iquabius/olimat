version: 2.1
orbs:
  codecov: codecov/codecov@1.1.2
  cypress: cypress-io/cypress@1.26.0

executors:
  prisma:
    docker:
      - image: cypress/base:14.15.0
      - image: postgres:10.14
        environment:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
      - image: prismagraphql/prisma:1.34
        environment:
          PRISMA_CONFIG: |
            port: 4466
            databases:
              default:
                connector: postgres
                host: localhost
                port: 5432
                user: prisma
                password: prisma
                migrations: true

jobs:
  integration_tests:
    executor: prisma
    working_directory: ~/olimat
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - monorepo-modules-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - monorepo-modules-
      - restore_cache:
          keys:
          - api-modules-{{ checksum "packages/api/package.json" }}
          - api-modules-
      - restore_cache:
          keys:
          - web-modules-{{ checksum "packages/web/package.json" }}
          - web-modules-

      # Install monorepo dependencies
      - run: npm ci
      # Install 'api' and 'web' dependencies
      - run: npx lerna bootstrap --ci
      - run:
          name: Start Prisma server
          command: cd packages/api && npx prisma deploy

      - save_cache:
          paths:
            - node_modules
          key: monorepo-modules-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - packages/api/node_modules
          key: api-modules-{{ checksum "packages/api/package.json" }}
      - save_cache:
          paths:
            - packages/web/node_modules
          key: web-modules-{{ checksum "packages/web/package.json" }}

      # ESLint should not care about code formating, we use Prettier for that. 
      - run:
          name: Checking ESLint Rules for Conflicts with Prettier
          command: npm run lint:check

      - run:
          name: Linting
          command: npm run lint

      # We now have to build TS projects to be able to type-check
      - run:
          name: Building TypeScript Project References
          command: npm run build:skip-web

      - run:
          name: Typechecking
          command: npm run typecheck
        
      # run tests!
      # For some reason Jest's multi-project runner breaks backend integration
      # and e2e tests. It doesn't work locally nor in the CI.
      - run:
          name: Testing
          command: npm run test:coverage

      # Upload test coverage reports to Codecov
      - codecov/upload

workflows:
  version: 2
  pipeline:
    jobs:
      - integration_tests:
          name: 'integration tests'
      - cypress/run:
          name: 'end-to-end tests'
          executor: prisma
          # record: true         # record results to Cypress Dashboard
          build: |
            npx lerna bootstrap --ci
            # Build separately because TS 3.9.0 is not emitting .js files
            # in api/dist
            cd packages/api
            npm run build
            cd ../web
            npm run build
            cd ../api
            # We're deploying prisma twice,
            # can we reuse the one from integration tests?
            npx prisma deploy
          start: npm start
          wait-on: http://localhost:3000
