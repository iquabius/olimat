version: 2.1
orbs:
  cypress: cypress-io/cypress@1.5.0

executors:
  prisma:
    docker:
      - image: cypress/base:10
      - image: postgres:10.5
        environment:
          POSTGRES_USER: prisma
          POSTGRES_PASSWORD: prisma
      - image: prismagraphql/prisma:1.23
        environment:
          PRISMA_CONFIG: |
            port: 4466
            databases:
              default:
                connector: postgres
                host: localhost
                port: 5432
                user: prisma
                password: prisma
                migrations: true

jobs:
  integration_tests:
    executor: prisma
    working_directory: ~/olimat
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - monorepo-modules-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - monorepo-modules-
      - restore_cache:
          keys:
          - api-modules-{{ checksum "api/package.json" }}
          - api-modules-
      - restore_cache:
          keys:
          - web-modules-{{ checksum "web/package.json" }}
          - web-modules-

      # Install monorepo dependencies
      - run: npm ci
      # Install 'api' and 'web' dependencies
      - run: npx lerna bootstrap --ci
      - run:
          name: Start Prisma server
          command: cd api && npx prisma deploy

      - save_cache:
          paths:
            - node_modules
          key: monorepo-modules-{{ checksum "package.json" }}
      - save_cache:
          paths:
            - api/node_modules
          key: api-modules-{{ checksum "api/package.json" }}
      - save_cache:
          paths:
            - web/node_modules
          key: web-modules-{{ checksum "web/package.json" }}

      - run:
          name: Linting
          command: npm run lint

      - run:
          name: Typechecking
          command: npm run typecheck
        
      # run tests!
      # For some reason Jest's multi-project runner breaks backend integration
      # and e2e tests. It doesn't work locally nor in the CI.
      - run:
          name: Testing
          command: npm test

workflows:
  version: 2
  pipeline:
    jobs:
      - integration_tests:
          name: 'integration tests'
      - cypress/run:
          name: 'end-to-end tests'
          executor: prisma
          record: true         # record results to Cypress Dashboard
          build: |
            npx lerna bootstrap --ci
            npx lerna run build
            cd api
            npx prisma deploy
          start: npm start
          wait-on: http://localhost:3000
